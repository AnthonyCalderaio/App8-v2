# The following types define the data model of the example service
# based on which the GraphQL API is generated
## Create Users Query 
#mutation {
  #createUser(
    #name: "Anthony"
		#dateOfBirth: "2017-10-06T14:54:54+00:00"
  #) {
    #id
  #}
#}


type User @model {
  id: ID! @isUnique
  name: String
  phone: String
  age: String
  password: String
  videos: [Video!]! @relation(name: "UserVideos")
}

type Video @model {
  id: ID! @isUnique
  user: User! @relation(name: "UserVideos")
}

type File @model {
  id: ID! @isUnique
  secret: String
  name: String
  url: String
  content: String


}






# Uncomment the model below as well

# type Post @model {
#   id: ID! @isUnique
#   title: String!
#
#   # Every relation also required a back-relation (to determine 1:1, 1:n or n:m)
#   author: User! @relation(name: "UserPosts")
# }



#type User {
  #id: ID!
  #student: Student @relation(name: "UserOnStudent")
  #company: Company @relation(name: "UserOnCompany")
  #userType: UserType!
#}

#type Company {
  #id: ID!
  #user: User @relation(name: "UserOnCompany")
#}

#type Student {
  #id: ID!
  #user: User @relation(name: "UserOnStudent")
#}

#enum UserType {
  #Student,
  #Company
#}